/**
 *
 * Reldens - AdminTranslations
 *
 */

class AdminTranslations
{

    static appendTranslations(translations)
    {
        // @TODO - BETA - Fix translations, use snippets, include new snippets under the basic config script.
        let adminTranslations = {
            messages: {
                loginWelcome: 'Administration Panel - Login',
                reldensTitle: 'Reldens - Administration Panel',
                reldensSlogan: 'You can do it',
                reldensDiscordTitle: 'Join our Discord server!',
                reldensDiscordText: 'Talk with the creators and other Reldens users',
                reldensGithubTitle: 'Find us on GitHub!',
                reldensGithubText: 'Need a new feature?'
                    +' Would you like to contribute with code?'
                    +' Find the source code or create an issue in GitHub',
                reldensLoading: 'Loading...'
            },
            labels: {
                navigation: 'Reldens - Administration Panel',
                adminVersion: 'Admin: {{version}}',
                loginWelcome: 'Reldens',
                pages: 'Server Management',
                management: 'Management',
                mapsWizard: 'Maps Generation and Import',
                objectsImport: 'Objects Import',
                skillsImport: 'Skills Import',
                shuttingDown: 'Server is shutting down in:',
                submitShutdownLabel: 'Shutdown Server',
                submitCancelLabel: 'Cancel Server Shutdown',
            },
            active_from: 'Active From',
            active_to: 'Active To',
            ads_id: 'Ads ID',
            ads_type: 'Ads Type',
            affectedProperty: 'Affected Property',
            aimProperties: 'Aim Properties',
            allowEffectBelowZero: 'Allow Effect Below Zero',
            allowSelfTarget: 'Allow Self Target',
            also_show_in_type: 'Also Show In Type',
            animationData: 'Animation Data',
            animationKey: 'Animation Key',
            applyDirectDamage: 'Apply Direct Damage',
            asset_file: 'Asset File',
            asset_key: 'Asset Key',
            asset_type: 'Asset Type',
            attackProperties: 'Attack Properties',
            audio_id: 'Audio ID',
            audio_key: 'Audio Key',
            autoFillExperienceMultiplier: 'Auto Fill Experience Multiplier',
            autoFillRanges: 'Auto Fill Ranges',
            autoValidation: 'Auto Validation',
            auto_remove_requirement: 'Auto Remove Requirement',
            banner_data: 'Banner Data',
            base_value: 'Base Value',
            bottom: 'Bottom',
            castTime: 'Cast Time',
            category_id: 'Category ID',
            category_key: 'Category Key',
            category_label: 'Category Label',
            chat_player_id: 'Chat Player ID',
            chat_private_player_id: 'Chat Private Player',
            chat_room: 'Chat Room',
            chat_type: 'Chat Type',
            clan_id: 'Clan ID',
            classKey: 'Class Key',
            class_path: 'Class Path',
            class_path_id: 'Class Path ID',
            class_path_level: 'Level Key',
            class_path_level_skill: 'Skill',
            class_path_owner: 'Class Path Owner',
            class_type: 'Class Type',
            client_key: 'Client Key',
            client_params: 'Client Params',
            code: 'Code',
            conditional: 'Conditional',
            config: 'Config',
            country_code: 'Country Code',
            created_at: 'Created At',
            criticalAffected: 'Critical Affected',
            criticalChance: 'Critical Chance',
            criticalFixedValue: 'Critical FixedValue',
            criticalMultiplier: 'Critical Multiplier',
            currentExp: 'Current Exp',
            currentLevel: 'Current Level',
            customData: 'Custom Data',
            damageAffected: 'Damage Affected',
            defenseProperties: 'Defense Properties',
            description: 'Description',
            dir: 'Dir',
            direction: 'Direction',
            drop_quantity: 'Drop Quantity',
            drop_rate: 'Drop Rate',
            dodgeFullEnabled: 'Dodge Full Enabled',
            dodgeOverAimSuccess: 'Dodge Over Aim Success',
            dodgeProperties: 'Dodge Properties',
            duration: 'Duration',
            email: 'Email',
            enabled: 'Enabled',
            ended_at: 'Ended At',
            event_data: 'Event Data',
            event_key: 'Event Key',
            experience: 'Experience',
            execTimeOut: 'Exec Time Out',
            extra_params: 'Extra Params',
            file: 'File',
            files_name: 'Files Name',
            from_room_id: 'From Room ID',
            group_id: 'Group ID',
            handler_key: 'Handler Key',
            has_drop_body: 'Has Drop Body',
            height: 'Height',
            hitDamage: 'Hit Damage',
            id: 'ID',
            instances_limit: 'Instances Limit',
            is_active: 'Is Active',
            is_default: 'Is Default',
            is_enabled: 'Is Enabled',
            is_unique: 'Is Unique',
            item_id: 'Item ID',
            item_key: 'Item Key',
            items_limit: 'Items Limit',
            key: 'Key',
            kill_npc_id: 'Kill NPC ID',
            kill_player_id: 'Kill Player ID',
            kill_time: 'Kill Time',
            label: 'Label',
            label_level: 'Label Level',
            language_code: 'Language Code',
            last_npc_kill_time: 'Last NPC Kill Time',
            last_player_kill_time: 'Last Player Kill Time',
            layer: 'Layer',
            layer_name: 'Layer Name',
            level: 'Level',
            level_id: 'Level ID',
            level_owner: 'Level Owner',
            level_set: 'Level Set',
            level_set_id: 'Level Set ID',
            levels_set_id: 'Levels Set ID',
            limit_per_item: 'Limit Per Item',
            locale: 'Locale',
            locale_id: 'Locale ID',
            login_count: 'Login Count',
            login_date: 'Login Date',
            logout_date: 'Logout Date',
            map_filename: 'Map Filename',
            marker_key: 'Marker Key',
            maxProperty: 'Max Property',
            maxValue: 'Max Value',
            message: 'Message',
            message_time: 'Message Time',
            message_type: 'Message Type',
            magnitude: 'Magnitude',
            minProperty: 'Min Property',
            minValue: 'Min Value',
            modifier_id: 'Modifier ID',
            name: 'Name',
            next_room_id: 'Next Room ID',
            npcs_kills_count: 'NPCs Kills Count',
            objectHeight: 'Object Height',
            objectWidth: 'Object Width',
            object_asset_id: 'Object Asset ID',
            object_class_key: 'Object Class Key',
            object_id: 'Object ID',
            obtained_score: 'Obtained Score',
            operation: 'Operation',
            owner_id: 'Owner ID',
            parent_group: 'Parent Group',
            parent_skill: 'Parent Skill',
            path: 'Path',
            password: 'Password',
            player_id: 'Player ID',
            played_time: 'Played Time',
            players_kill_count: 'Players Kills Count',
            players_kills_count: 'Players Kills Count',
            points: 'Points',
            position: 'Position',
            position_bottom: 'Position Bottom',
            position_left: 'Position Left',
            position_right: 'Position Right',
            position_top: 'Position Top',
            private_params: 'Private Params',
            private_player_id: 'Private Player ID',
            property_key: 'Property Key',
            provider_id: 'Provider ID',
            qty: 'Qty',
            qty_limit: 'Qty Limit',
            range: 'Range',
            rangeAutomaticValidation: 'Range Automatic Validation',
            rangePropertyX: 'Range Property X',
            rangePropertyY: 'Range Property Y',
            rangeTargetPropertyX: 'Range Target Property X',
            rangeTargetPropertyY: 'Range Target Property Y',
            remaining_uses: 'Remaining Uses',
            required_experience: 'Required Experience',
            required_item_key: 'Required Item Key',
            required_quantity: 'Required Quantity',
            respawn_time: 'Respawn Time',
            replay: 'Replay',
            reward_item_is_required: 'Reward Item Is Required',
            reward_item_key: 'Reward Item Key',
            reward_quantity: 'Reward Quantity',
            rewards_events_id: 'Rewards Events ID',
            role_id: 'Role ID',
            room_class_key: 'Room Class Key',
            room_id: 'Room ID',
            scene_images: 'Scene Images',
            scope: 'Scope',
            server_url: 'Server URL',
            show_in_general: 'Show In General',
            show_tab: 'Show Tab',
            single_audio: 'Single Audio',
            skill: 'Skill',
            skillDelay: 'Skill Delay',
            skill_id: 'Skill ID',
            sort: 'Sort',
            start: 'Start',
            started_at: 'Started At',
            state: 'State',
            stat_id: 'Stat ID',
            status: 'Status',
            target_id: 'Target ID',
            target_key: 'Target Key',
            target_label: 'Target Label',
            tile_index: 'Tile Index',
            title: 'Title',
            top: 'Top',
            total_score: 'Total Score',
            type: 'Type',
            type_id: 'Type ID',
            updated_at: 'Updated At',
            useTimeOut: 'Use Time Out',
            user_id: 'User ID',
            username: 'Username',
            usesLimit: 'Uses Limit',
            uses_limit: 'Uses Limit',
            validateTargetOnHit: 'Validate Target On Hit',
            value: 'Value',
            was_given: 'Was Given',
            width: 'Width',
            x: 'X',
            y: 'Y'
        };
        for(let i of Object.keys(translations)){
            if(!adminTranslations[i]){
                adminTranslations[i] = {};
            }
            Object.assign(adminTranslations[i], translations[i]);
        }
        return adminTranslations;
    }

}

module.exports.AdminTranslations = AdminTranslations;
